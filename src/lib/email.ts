import nodemailer from 'nodemailer';

interface EmailConfig {
  to: string;
  subject: string;
  html: string;
}

// Create a transporter using SMTP or a service like Gmail
// For development, using a test account or simple SMTP
const transporter = nodemailer.createTransport({
  host: 'smtp.gmail.com',
  port: 587, // 587
  secure: false,
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS
  },
});

export const sendEmail = async ({ to, subject, html }: EmailConfig) => {
  try {
    const info = await transporter.sendMail({
      from: `"NewForm Reports" <${process.env.EMAIL_USER}>`,
      to,
      subject,
      html
    });
    
    console.log('Email sent successfully:', info.messageId);
    return { success: true, messageId: info.messageId };
  } catch (error) {
    console.error('Error sending email:', error);
    return { success: false, error: error instanceof Error ? error.message : 'Unknown error' };
  }
};

export const createReportEmail = (data: { 
  platform?: string; 
  dateRangeEnum?: string; 
  data?: unknown; 
  summary?: string;
  reportId?: string;
}) => {
  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';
  const publicLink = data.reportId ? `${baseUrl}/view-report/${data.reportId}` : '#';
  
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background-color: #f4f4f4; padding: 20px; text-align: center; }
        .content { padding: 20px; }
        .metrics { background-color: #f9f9f9; padding: 15px; border-radius: 5px; margin: 15px 0; }
        .footer { background-color: #f4f4f4; padding: 10px; text-align: center; font-size: 12px; }
        .button { display: inline-block; background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; margin: 10px 0; }
        .summary { background-color: #e3f2fd; padding: 15px; border-radius: 5px; margin: 15px 0; border-left: 4px solid #2196f3; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>ðŸ“Š Your Scheduled Report</h1>
          <p>Hello! Here's your automated insight report.</p>
        </div>
        <div class="content">
          <h2>Report Summary</h2>
          <div class="summary">
            <p><strong>ðŸ¤– AI Summary:</strong></p>
            <p>${data.summary || 'Summary not available'}</p>
          </div>
          
          <div class="metrics">
            <h3>Key Metrics</h3>
            <p><strong>Platform:</strong> ${data.platform || 'N/A'}</p>
            <p><strong>Date Range:</strong> ${data.dateRangeEnum || 'N/A'}</p>
            <p><strong>Generated:</strong> ${new Date().toLocaleString()}</p>
          </div>
          
          <div style="text-align: center; margin: 30px 0; text-[#333]">
            <a href="${publicLink}" class="button">ðŸ“Š View Full Report</a>
          </div>
          
          <p style="font-size: 14px; color: #666; text-align: center;">
            Click the button above to view the complete report with charts, detailed metrics, and interactive visualizations.
          </p>
        </div>
        <div class="footer">
          <p>Generated by Newform Scheduled Reports | <a href="#">Unsubscribe</a></p>
        </div>
      </div>
    </body>
    </html>
  `;
}; 